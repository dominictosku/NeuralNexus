@page "/"
@using NeuralNexus.Data.Services
@inject AIService AiService;

<PageTitle>Home</PageTitle>

<div class="chat-container">
    <div class="chat-header">
        <h3>AI Chat</h3>
    </div>
    <div class="chat-body" id="chatBody">
        <!-- Messages will be displayed here -->
        @foreach (var message in Messages)
        {
            <div class="message @message.Sender">
                <div class="bubble">@message.Text</div>
            </div>
        }
    </div>
    <div class="chat-footer">
        <EditForm Model="this" OnValidSubmit="HandleSubmit">
            <div class="input-group">
                <InputText id="userMessage" class="form-control" @bind-Value="UserMessage" placeholder="Type a message..." />
                <button class="btn btn-primary" type="submit">Send</button>
            </div>
        </EditForm>
    </div>
</div>

<style>
    body {
    background-color: #f8f9fa;
    }
    .chat-container {
    max-width: 600px;
    margin: 20px auto;
    background: white;
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    overflow: hidden;
    }
    .chat-header {
    background-color: #007bff;
    color: white;
    padding: 15px;
    text-align: center;
    }
    .chat-body {
    height: 400px;
    overflow-y: auto;
    padding: 15px;
    }
    .chat-footer {
    padding: 10px;
    border-top: 1px solid #ddd;
    }
    .message {
    margin-bottom: 10px;
    }
    .message.user {
    text-align: right;
    }
    .message.ai {
    text-align: left;
    }
    .message .bubble {
    display: inline-block;
    padding: 10px 15px;
    border-radius: 15px;
    max-width: 70%;
    }
    .message.user .bubble {
    background-color: #007bff;
    color: white;
    }
    .message.ai .bubble {
    background-color: #e9ecef;
    color: black;
    }
</style>

@code {
    private string UserMessage { get; set; } = string.Empty;
    private List<Message> Messages { get; set; } = new List<Message>();

    private async Task HandleSubmit()
    {
        var userMessage = UserMessage;
        UserMessage = string.Empty;
        Messages.Add(new Message { Text = userMessage, Sender = "user" });

        var message = await AiService.CreateMessage(userMessage);
        Messages.Add(new Message { Text = message, Sender = "ai" });
    }

    private class Message
    {
        public string Text { get; set; } = string.Empty;
        public string Sender { get; set; } = string.Empty;
    }
}
